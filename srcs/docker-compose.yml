version: '3'

networks:
  inception:
    driver: bridge

services:
  mariadb:
    container_name: mariadb # Le nom du container, oui vraiment.
    networks:
      - inception            # à quel network il appartient
    build: 
      context: requirements/mariadb # ou se trouve son Dockerfile
      dockerfile: Dockerfile # le nom du Dockerfile ?!
    env_file: .env                  # le fichier d'environnement pour transmettre les variables
    volumes:                        # Voir plus bas
      - mariadb:/var/lib/mysql
    restart: unless-stopped         # redémarre tant qu'il n'est pas stoppé 
    expose:                         # le port à exposer
      - "3306"
  nginx:
    container_name: nginx
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:      # Nouvelle ligne, indiquant de ne pas démarrer NGINX tant que WordPress n'a pas démarré.
      - wordpress
    build: 
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443" # on indique le port qui sera exposé a la machine locale
    restart: on-failure # Ici nous changeons, le container redémarrera uniquement en cas de crash.
  wordpress:
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    build: 
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on: # WordPress démarrera uniquement après MariaDB (sinon il ne pourra pas configurer la base de données...)
      - mariadb
    restart: on-failure
    expose: 
      - "9000"



volumes:
  wordpress:
    driver: local # ici nous stockons le volume en local
    driver_opts:
      type: 'none' # aucun type spécifique
      o: 'bind'
      device: '/home/ajakubcz/data/wordpress' #Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
      type: 'none' 
      o: 'bind' # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
      device: '/home/ajakubcz/data/mariadb' #Ou stocker le dossier sur votre ordinateur en local





# networks:
#   inception:
#     driver: bridge

# services:
#   nginx:
#     container_name: nginx
#     networks:
#       - inception
#     build:
#       context: ./requirements/nginx
#       dockerfile: Dockerfile
#     ports:
#       - "443:443"
#     volumes:
#       - type: bind
#         source: /home/ajakubcz/data/
#         target: /test/volume
#     restart: on-failure

#   mariadb:
#       container_name: mariadb
#       networks:
#         - inception
#       build:
#         context: ./requirements/mariadb
#         dockerfile: Dockerfile
#       ports:
#         - "3306:3306"
#       volumes:
#         - type: bind
#           source: /home/ajakubcz/data/
#           target: /test/volume
#       restart: on-failure









# version: '2'

# services:
#    db:
#      image: mysql:5.7
#      volumes:
#        - db_data:/var/lib/mysql
#      restart: always
#      environment:
#        MYSQL_ROOT_PASSWORD: somewordpress
#        MYSQL_DATABASE: wordpress
#        MYSQL_USER: wordpress
#        MYSQL_PASSWORD: wordpress

#    wordpress:
#      depends_on:
#        - db
#      image: wordpress:latest
#      ports:
#        - "8000:80"
#      restart: always
#      environment:
#        WORDPRESS_DB_HOST: db:3306
#        WORDPRESS_DB_USER: wordpress
#        WORDPRESS_DB_PASSWORD: wordpress
# volumes:
#     db_data: